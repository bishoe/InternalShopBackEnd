// <auto-generated />
using System;
using InternalShop;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InternalShop.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221217184720_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("InternalShop.Appuser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("InternalShop.Models.BranchesReportT", b =>
                {
                    b.Property<string>("BranchAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("BranchCode")
                        .HasColumnType("int");

                    b.Property<int>("BranchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchID"), 1L, 1);

                    b.Property<string>("BranchMobile")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BranchPhone")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEdit")
                        .HasColumnType("datetime2");

                    b.Property<string>("ManageStorename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("USerID")
                        .HasColumnType("int");

                    b.Property<int>("manageStoreID")
                        .HasColumnType("int");

                    b.ToTable("#BranchesReportT");

                    b.ToView("#BranchesReportT");
                });

            modelBuilder.Entity("InternalShop.Models.BranchesT", b =>
                {
                    b.Property<int>("BranchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchID"), 1L, 1);

                    b.Property<string>("BranchAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("BranchCode")
                        .HasColumnType("int");

                    b.Property<string>("BranchMobile")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BranchPhone")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEdit")
                        .HasColumnType("datetime2");

                    b.Property<int>("USerID")
                        .HasColumnType("int");

                    b.Property<int>("manageStoreID")
                        .HasColumnType("int");

                    b.HasKey("BranchID");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("InternalShop.Models.CategoriesT", b =>
                {
                    b.Property<int>("CategoryProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryProductId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsersID")
                        .HasColumnType("int");

                    b.HasKey("CategoryProductId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("InternalShop.Models.ConvertofStoresT", b =>
                {
                    b.Property<int>("ConvertofStoresId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConvertofStoresId"), 1L, 1);

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEdit")
                        .HasColumnType("datetime2");

                    b.Property<int>("ManageStoreIdFrom")
                        .HasColumnType("int");

                    b.Property<int>("ManageStoreIdTo")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("ProdouctsID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("quantityProduct")
                        .HasColumnType("int");

                    b.HasKey("ConvertofStoresId");

                    b.ToTable("ConvertofStores");
                });

            modelBuilder.Entity("InternalShop.Models.CustomersT", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEdit")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("UsersID")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("InternalShop.Models.DismissalnoticeT", b =>
                {
                    b.Property<int>("DismissalnoticeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DismissalnoticeId"), 1L, 1);

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEdit")
                        .HasColumnType("datetime2");

                    b.Property<int>("MasterOFSToresId")
                        .HasColumnType("int");

                    b.Property<int>("ProdouctsID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("quantityProduct")
                        .HasColumnType("int");

                    b.HasKey("DismissalnoticeId");

                    b.ToTable("Dismissalnotice");
                });

            modelBuilder.Entity("InternalShop.Models.EmployeesT", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEdit")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeePhone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<decimal>("EmployeeSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Notes")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("UsersID")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("InternalShop.Models.InvoiceStoreStatusT", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("Billno")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEdit")
                        .HasColumnType("datetime2");

                    b.Property<int>("ManageStoreID")
                        .HasColumnType("int");

                    b.Property<decimal>("PAIDAMOUNT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RemainingAMOUNT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("InvoiceStoreStatus");
                });

            modelBuilder.Entity("InternalShop.Models.ManageStoreT", b =>
                {
                    b.Property<int>("ManageStoreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManageStoreID"), 1L, 1);

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<string>("ManageStorename")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ManageStoreID");

                    b.ToTable("ManageStore");
                });

            modelBuilder.Entity("InternalShop.Models.MasterProductsWarehouseT", b =>
                {
                    b.Property<int>("ManageStoreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManageStoreID"), 1L, 1);

                    b.Property<decimal>("AMountDicount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tax")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalBDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UsersID")
                        .HasColumnType("int");

                    b.HasKey("ManageStoreID");

                    b.ToTable("MasterProductsWarehouse");
                });

            modelBuilder.Entity("InternalShop.Models.OutLayUnitesT", b =>
                {
                    b.Property<int>("OutLayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OutLayID"), 1L, 1);

                    b.Property<string>("QName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("OutLayID");

                    b.ToTable("OutLayUnites");
                });

            modelBuilder.Entity("InternalShop.Models.PermissionToEntertheStoreProductT", b =>
                {
                    b.Property<int>("PermissionToEntertheStoreProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermissionToEntertheStoreProductId"), 1L, 1);

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<int>("ManageStoreId")
                        .HasColumnType("int");

                    b.Property<int>("ProdouctsID")
                        .HasColumnType("int");

                    b.Property<int>("quantityProduct")
                        .HasColumnType("int");

                    b.HasKey("PermissionToEntertheStoreProductId");

                    b.HasIndex("ManageStoreId");

                    b.HasIndex("ProdouctsID");

                    b.ToTable("PermissionToEntertheStoreProduct");
                });

            modelBuilder.Entity("InternalShop.Models.ProductsT", b =>
                {
                    b.Property<int>("ProdouctsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdouctsID"), 1L, 1);

                    b.Property<int>("BarCodeText")
                        .HasColumnType("int");

                    b.Property<int>("CategoryProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ProdouctName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UsersID")
                        .HasColumnType("int");

                    b.HasKey("ProdouctsID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("InternalShop.Models.ProductsWarehouseObjectT", b =>
                {
                    b.Property<int>("ManageStoreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManageStoreID"), 1L, 1);

                    b.Property<decimal>("AMountDicount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Anexpiredproduct")
                        .HasColumnType("bit");

                    b.Property<int>("Billno")
                        .HasColumnType("int");

                    b.Property<int>("CategoryProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Dateofregistration")
                        .HasColumnType("datetime2");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Nocolumn")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PermissionToEntertheStoreProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProdouctsID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Productiondate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PurchasingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QtStartPeriod")
                        .HasColumnType("int");

                    b.Property<int>("QuntityProduct")
                        .HasColumnType("int");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SizeProducts")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("SuppliersID")
                        .HasColumnType("int");

                    b.Property<int>("Tax")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmountRow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalBDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UnitesId")
                        .HasColumnType("int");

                    b.Property<int>("UsersID")
                        .HasColumnType("int");

                    b.HasKey("ManageStoreID");

                    b.ToTable("productsWarehouseObjectTs");
                });

            modelBuilder.Entity("InternalShop.Models.ProductsWarehouseT", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoreId"), 1L, 1);

                    b.Property<bool>("Anexpiredproduct")
                        .HasColumnType("bit");

                    b.Property<int>("Billno")
                        .HasColumnType("int");

                    b.Property<int>("CategoryProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Dateofregistration")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ManageStoreID")
                        .HasColumnType("int");

                    b.Property<int>("Nocolumn")
                        .HasColumnType("int");

                    b.Property<int>("PermissionToEntertheStoreProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProdouctsID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Productiondate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PurchasingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QtStartPeriod")
                        .HasColumnType("int");

                    b.Property<int>("QuntityProduct")
                        .HasColumnType("int");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SizeProducts")
                        .HasColumnType("int");

                    b.Property<int>("SuppliersID")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmountRow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UnitesId")
                        .HasColumnType("int");

                    b.HasKey("StoreId");

                    b.ToTable("ProductsWarehouse");
                });

            modelBuilder.Entity("InternalShop.Models.QuantityProductT", b =>
                {
                    b.Property<int>("QTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QTID"), 1L, 1);

                    b.Property<int>("BranchCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEdit")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProdouctsID")
                        .HasColumnType("int");

                    b.Property<int>("StoreID")
                        .HasColumnType("int");

                    b.Property<int>("manageStoreID")
                        .HasColumnType("int");

                    b.Property<int>("quantityProduct")
                        .HasColumnType("int");

                    b.HasKey("QTID");

                    b.ToTable("QuantityProducts");
                });

            modelBuilder.Entity("InternalShop.Models.ReportConvertofStoresT", b =>
                {
                    b.Property<string>("Notes")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<int>("ManageStoreIdFrom")
                        .HasColumnType("int");

                    b.Property<string>("ManageStorename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProdouctName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("quantityProduct")
                        .HasColumnType("int");

                    b.HasKey("Notes");

                    b.ToTable("reportConvertofStoresTs");
                });

            modelBuilder.Entity("InternalShop.Models.ReportDismissalnotice", b =>
                {
                    b.Property<int>("DismissalnoticeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DismissalnoticeId"), 1L, 1);

                    b.Property<string>("BarCodeText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<int>("ManageStoreID")
                        .HasColumnType("int");

                    b.Property<string>("ManageStorename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProdouctName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProdouctsID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("quantityProduct")
                        .HasColumnType("int");

                    b.HasKey("DismissalnoticeId");

                    b.ToTable("reportDismissalnotices");
                });

            modelBuilder.Entity("InternalShop.Models.ReportPermissionToEntertheStoreProduct", b =>
                {
                    b.Property<int>("PermissionToEntertheStoreProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermissionToEntertheStoreProductId"), 1L, 1);

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<int>("ManageStoreId")
                        .HasColumnType("int");

                    b.Property<string>("ManageStorename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProdouctName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProdouctsID")
                        .HasColumnType("int");

                    b.Property<int>("quantityProduct")
                        .HasColumnType("int");

                    b.HasKey("PermissionToEntertheStoreProductId");

                    b.ToTable("reportPermissionToEntertheStoreProducts");
                });

            modelBuilder.Entity("InternalShop.Models.ReportProductsWarehouse", b =>
                {
                    b.Property<int>("ManageStoreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManageStoreID"), 1L, 1);

                    b.Property<decimal>("AMountDicount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Anexpiredproduct")
                        .HasColumnType("bit");

                    b.Property<int>("Billno")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Dateofregistration")
                        .HasColumnType("datetime2");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PermissionToEntertheStoreProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProdouctName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProdouctsID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Productiondate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PurchasingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QtStartPeriod")
                        .HasColumnType("int");

                    b.Property<int>("QuntityProduct")
                        .HasColumnType("int");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SizeProducts")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("SuppliersID")
                        .HasColumnType("int");

                    b.Property<int>("Tax")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmountRow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalBDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UnitesId")
                        .HasColumnType("int");

                    b.Property<int>("UsersID")
                        .HasColumnType("int");

                    b.HasKey("ManageStoreID");

                    b.ToTable("reportProductsWarehouses");
                });

            modelBuilder.Entity("InternalShop.Models.ReportSalesInvoiceById", b =>
                {
                    b.Property<int>("SellingMasterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SellingMasterID"), 1L, 1);

                    b.Property<decimal>("AMountDicount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProdouctName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProdouctsID")
                        .HasColumnType("int");

                    b.Property<int>("Quntity_Product")
                        .HasColumnType("int");

                    b.Property<decimal>("RemainingAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmountRow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalBDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SellingMasterID");

                    b.ToTable("reportSalesInvoiceByIds");
                });

            modelBuilder.Entity("InternalShop.Models.SalesinvoiceMasterT", b =>
                {
                    b.Property<int>("SellingMasterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SellingMasterID"), 1L, 1);

                    b.Property<decimal>("AMountDicount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<decimal>("RemainingAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalBDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UsersID")
                        .HasColumnType("int");

                    b.HasKey("SellingMasterID");

                    b.ToTable("SalesInvoicesMaster");
                });

            modelBuilder.Entity("InternalShop.Models.SalesinvoiceT", b =>
                {
                    b.Property<int>("SellingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SellingId"), 1L, 1);

                    b.Property<int>("ProdouctsID")
                        .HasColumnType("int");

                    b.Property<int>("Quntity_Product")
                        .HasColumnType("int");

                    b.Property<int>("SellingMasterID")
                        .HasColumnType("int");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmountRow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UsersID")
                        .HasColumnType("int");

                    b.HasKey("SellingId");

                    b.ToTable("SalesInvoices");
                });

            modelBuilder.Entity("InternalShop.Models.SuppliersT", b =>
                {
                    b.Property<int>("SuppliersID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SuppliersID"), 1L, 1);

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEdit")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SuplierAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SuplierName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("SuplierPhone")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("UsersID")
                        .HasColumnType("int");

                    b.HasKey("SuppliersID");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("InternalShop.Models.SupplyRepresentativeT", b =>
                {
                    b.Property<int>("SuppliersID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SuppliersID"), 1L, 1);

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEdit")
                        .HasColumnType("datetime2");

                    b.Property<string>("SupplierRAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("SupplierRID")
                        .HasColumnType("int");

                    b.Property<string>("SupplierRName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SupplierRNotes")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SupplierRPhone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("UsersID")
                        .HasColumnType("int");

                    b.HasKey("SuppliersID");

                    b.ToTable("SupplyRepresentatives");
                });

            modelBuilder.Entity("InternalShop.Models.UnitesT", b =>
                {
                    b.Property<int>("UnitesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnitesId"), 1L, 1);

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEdit")
                        .HasColumnType("datetime2");

                    b.Property<int>("UnitesConvert")
                        .HasColumnType("int");

                    b.Property<string>("UnitesName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UnitesId");

                    b.ToTable("Unites");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        },
                        new
                        {
                            Id = "2",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("InternalShop.Models.PermissionToEntertheStoreProductT", b =>
                {
                    b.HasOne("InternalShop.Models.ManageStoreT", "ManageStore")
                        .WithMany("PermissionToEntertheStoreProduct")
                        .HasForeignKey("ManageStoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalShop.Models.ProductsT", "Products")
                        .WithMany("PermissionToEntertheStoreProduct")
                        .HasForeignKey("ProdouctsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManageStore");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("InternalShop.Appuser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("InternalShop.Appuser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalShop.Appuser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("InternalShop.Appuser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InternalShop.Models.ManageStoreT", b =>
                {
                    b.Navigation("PermissionToEntertheStoreProduct");
                });

            modelBuilder.Entity("InternalShop.Models.ProductsT", b =>
                {
                    b.Navigation("PermissionToEntertheStoreProduct");
                });
#pragma warning restore 612, 618
        }
    }
}
